cmake_minimum_required(VERSION 3.0)

project(task-opt1)

# TODO: LTO should be set with INTERPROCEDURAL_OPTIMIZATION (CMake 3.9)
#
# https://cmake.org/cmake/help/latest/policy/CMP0069.html#policy:CMP0069

if (MSVC)
	# We build Relase with the /MD (DLL) option instead of CMake's default /MT (static runtime)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W3 /wd4576 /D_HAS_EXCEPTIONS=0 /GR- /MP")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /Od /MDd /wd4189")
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /O2 /Ot /Oi /MD /GS- /Gy /DNDEBUG=1 /GL")
	set(CMAKE_EXE_LINKER_FLAGS_RELEASE "/OPT:REF /OPT:ICF /INCREMENTAL:NO /LTCG")
else()
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -fno-exceptions -fno-rtti")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -g3 -D_DEBUG=1 -Wno-unused")
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -g0 -DNDEBUG=1 -flto")
	if (EMSCRIPTEN)
		# And for ease-of-use we build Wasm all in one file (which makes it easier to test)
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msimd128")
		set(CMAKE_EXECUTABLE_SUFFIX ".html")
		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -s SINGLE_FILE=1")
	endif()
endif()

file(GLOB INCS "*.h" "*.inc")
file(GLOB SRCS "*.cpp")
source_group("Headers" FILES ${INCS})
source_group("Sources" FILES ${SRCS})

add_executable(task-opt1 ${SRCS} ${INCS})
